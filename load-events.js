document.addEventListener("DOMContentLoaded", () => {
    const eventsContainer = document.getElementById("events-container");
    if (!eventsContainer) return; // âœ… Prevents errors if container is missing

    const storedEvents = localStorage.getItem("events");
    let events = [];

    try {
        events = storedEvents ? JSON.parse(storedEvents) : []; // âœ… Prevents JSON parsing errors
    } catch (error) {
        console.error("Error parsing events from localStorage:", error);
        events = []; // âœ… Fallback to empty array
    }

    eventsContainer.innerHTML = ""; // Clear previous events

    if (events.length === 0) {
        eventsContainer.innerHTML = "<p>No events available.</p>"; // âœ… Handle empty events gracefully
        return;
    }

    // âœ… Create a wrapper for layout
    const eventGrid = document.createElement("div");
    eventGrid.classList.add("event-grid");

    const emojiMap = {
        "hackathon": "ðŸ’»",
        "sports": "âš½",
        "music": "ðŸŽ¶",
        "dance": "ðŸ’ƒ",
        "gaming": "ðŸŽ®",
        "other": "ðŸ”¹"
    };

    events.forEach(event => {
        const eventCard = document.createElement("div");
        eventCard.classList.add("event-card");

        const category = (event.category || "other").toLowerCase(); // âœ… Ensures lowercase lookup
        const categoryEmoji = emojiMap[category] || "ðŸ”¹"; // âœ… Default emoji

        eventCard.innerHTML = `
            <h3>${categoryEmoji} ${event.name}</h3>
            <p>${event.desc}</p>
            <span>ðŸ“… ${event.date}</span>
        `;

        eventGrid.appendChild(eventCard);
    });

    eventsContainer.appendChild(eventGrid); // âœ… Append grid only if events exist
});
